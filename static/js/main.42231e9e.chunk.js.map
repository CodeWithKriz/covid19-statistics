{"version":3,"sources":["components/covidHistoryChart.jsx","appConfig.tsx","components/covidStatistics.jsx","components/header.tsx","components/footer.tsx","App.tsx","index.tsx"],"names":["GraphChart","props","state","type","labels","datasets","label","chartTitle","data","series","fill","backgroundColor","bgColor","borderColor","pointRadius","options","responsive","tooltips","mode","intersect","hover","this","height","style","width","Component","config","webServer","host","covidAPI","countries","statistics","history","img","loadingGIF","commaSeparatedNum","toString","replace","covidStatistics","handleResetCountry","event","a","countrySelected","setState","apiResponse","covidStatisticsAPI","covidHistoryAPI","componentDidMount","handleCountryChange","eventHandled","target","value","fetch","json","getCovidHistory","covidHistory","error","JSON","stringify","countryCount","countryList","countryOptions","args","index","push","name","String","toLowerCase","text","result","totalCases","totalDeaths","totalActive","dateTime","dateArray","sortedArray","sort","b","keyA","Date","keyB","i","length","eachDate","toLocaleDateString","split","indexOf","countryData","getCountryOptions","alert","waitingAPIResp","className","src","alt","selectCountry","ifTrue","Dropdown","placeholder","fluid","search","selection","onChange","defaultValue","Button","variant","onClick","ifFalse","covidHistoryChart","casesChart","getTotalStatistics","totalCritical","totalRecovered","totalTests","totalPopulation","totalCasesNew","totalDeathsNew","idx","parseInt","totalCasesNewTag","totalDeathsNewTag","totalCasesTag","totalActiveTag","totalCriticalTag","totalRecoveredTag","totalDeathsTag","totalTestsTag","totalPopulationTag","textAlign","countryMainContent","messages","errorMessage","listCovidStats","listContent","float","Header","to","process","Footer","href","rel","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42231e9e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nexport default class GraphChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: 'line',\r\n            labels: [...this.props.labels],\r\n            datasets: [\r\n                {\r\n                  label: this.props.chartTitle,\r\n                  data: [...this.props.series],\r\n                  fill: true,\r\n                  backgroundColor: `rgba(${this.props.bgColor}, 0.2)`,\r\n                  borderColor: `rgba(${this.props.bgColor}, 1)`,\r\n                  pointRadius: 0,\r\n                },\r\n            ],\r\n            options: {\r\n                responsive: true,\r\n                tooltips: {\r\n                    mode: 'index',\r\n                    intersect: false,\r\n                },\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: true\r\n                },\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Line data={this.state} height={150} style={{ width: '35rem', }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","const config = {\r\n    webServer: {\r\n        host: 'https://krish-flask-app-v1.herokuapp.com/api/v2/covid_api'\r\n    },\r\n    covidAPI: {\r\n        countries: '/country',\r\n        statistics: '/statistics',\r\n        history: '/history',\r\n    },\r\n    img: {\r\n        loadingGIF: 'https://media.giphy.com/media/hWZBZjMMuMl7sWe0x8/giphy.gif'\r\n    }\r\n}\r\n\r\nexport default config;\r\n","import React, { Component } from 'react';\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport GraphChart from './covidHistoryChart';\r\nimport config from '../appConfig';\r\n\r\nfunction commaSeparatedNum(data) {\r\n    return data ? data.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\") : 0;\r\n}\r\n\r\nexport default class covidStatistics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apiResponse: '',\r\n            countryCount: '',\r\n            countryList: [],\r\n            countryOptions: [],\r\n            countrySelected: '',\r\n            covidStatisticsAPI: '',\r\n            covidStatistics: [],\r\n            covidHistoryAPI: '',\r\n            covidHistory: {},\r\n            error: '',\r\n        };\r\n    }\r\n    getCountryOptions (args) {\r\n        var countryOptions = [];\r\n        for (let index = 0; args['countries'][index]; index++) {\r\n            countryOptions.push({\r\n                value: args['countries'][index],\r\n                name: String(args['countries'][index]).toLowerCase(),\r\n                text: args['countries'][index],\r\n            });\r\n        }\r\n        return countryOptions;\r\n    }\r\n    getCovidHistory(args) {\r\n        var result = {\r\n            totalCases: [],\r\n            totalDeaths: [],\r\n            totalActive: [],\r\n            dateTime: []\r\n        };\r\n        let dateArray = [];\r\n        let sortedArray = args['data'];\r\n        sortedArray.sort((a, b) => {\r\n            var keyA = new Date(a[\"day\"]),\r\n            keyB = new Date(b[\"day\"]);\r\n            if (keyA < keyB) return -1;\r\n            if (keyA > keyB) return 1;\r\n            return 0;\r\n        });\r\n        for (let i=0; i < sortedArray.length; i++) {\r\n            // let date_inst = new Date(sortedArray[i]['time']);\r\n            // let dateToString = date_inst.toLocaleDateString().split(\",\")[0];\r\n            let eachDate = new Date(sortedArray[i]['day']);\r\n            eachDate = eachDate.toLocaleDateString().split(\",\")[0];\r\n            if (dateArray.indexOf(eachDate) === -1) {\r\n                result['totalCases'].push(sortedArray[i]['cases']['total']);\r\n                result['totalDeaths'].push(sortedArray[i]['deaths']['total']);\r\n                result['totalActive'].push(sortedArray[i]['cases']['active']);\r\n                result['dateTime'].push(eachDate);\r\n                dateArray.push(eachDate);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    async componentDidMount() {\r\n        try {\r\n            let countryData = await fetch(`${config.webServer.host}${config.covidAPI.countries}`);\r\n            countryData = await countryData.json();\r\n            countryData = countryData[\"countries\"]\r\n            let covidStatistics = await fetch(`${config.webServer.host}${config.covidAPI.statistics}|All`);\r\n            covidStatistics = await covidStatistics.json();\r\n            covidStatistics = [covidStatistics[\"statistics\"]];\r\n            this.setState({\r\n                apiResponse: countryData,\r\n                countryCount: countryData.length,\r\n                countryList: [...countryData],\r\n                countryOptions: this.getCountryOptions({ countries: [...countryData] }),\r\n                countrySelected: 'All',\r\n                covidStatisticsAPI: covidStatistics,\r\n                covidStatistics: covidStatistics,\r\n            });\r\n            let covidHistoryAPI = await fetch(`${config.webServer.host}${config.covidAPI.history}|All`);\r\n            covidHistoryAPI = await covidHistoryAPI.json();\r\n            covidHistoryAPI = covidHistoryAPI[\"history\"];\r\n            let getCovidHistory = this.getCovidHistory({ data: [...covidHistoryAPI] });\r\n            this.setState({\r\n                covidHistoryAPI: [...covidHistoryAPI],\r\n                covidHistory: getCovidHistory,\r\n            });\r\n        } catch (err) {\r\n            this.setState({\r\n                error: JSON.stringify(err),\r\n                apiResponse: '',\r\n                covidStatisticsAPI: '',\r\n                covidHistoryAPI: '',\r\n            });\r\n            alert(err);\r\n        }\r\n    }\r\n    handleResetCountry = async (event, data) => {\r\n        if (this.state.countrySelected !== 'All') {\r\n            this.setState({ apiResponse: '', covidStatisticsAPI: '', covidHistoryAPI: '', });\r\n            this.componentDidMount();\r\n        }\r\n    };\r\n    handleCountryChange = async (event, data) => {\r\n        var eventHandled = {\r\n            event: event.target.value,\r\n            data: data.value,\r\n        }\r\n        try {\r\n            this.setState({ covidStatisticsAPI: '', covidHistoryAPI: '', });\r\n            let covidStatistics = await fetch(`${config.webServer.host}${config.covidAPI.statistics}|${data.value}`);\r\n            covidStatistics = await covidStatistics.json();\r\n            covidStatistics = [covidStatistics[\"statistics\"]];\r\n            this.setState({\r\n                countrySelected: eventHandled['data'],\r\n                covidStatisticsAPI: covidStatistics,\r\n                covidStatistics: covidStatistics,\r\n            });\r\n            let covidHistoryAPI = await fetch(`${config.webServer.host}${config.covidAPI.history}|${data.value}`);\r\n            covidHistoryAPI = await covidHistoryAPI.json();\r\n            covidHistoryAPI = covidHistoryAPI[\"history\"];\r\n            let getCovidHistory = this.getCovidHistory({ data: [...covidHistoryAPI] });\r\n            this.setState({\r\n                covidHistoryAPI: covidHistoryAPI,\r\n                covidHistory: getCovidHistory,\r\n            });\r\n        } catch (err) {\r\n            this.setState({\r\n                error: JSON.stringify(err),\r\n                apiResponse: '',\r\n                covidStatisticsAPI: '',\r\n                covidHistoryAPI: '',\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const countrySelected = this.state.countrySelected;\r\n        const loadingGIF = config.img.loadingGIF;\r\n        const waitingAPIResp = <img className=\"loading-gif-style\" src={ loadingGIF } alt=\"#NA\"></img>;\r\n        const selectCountry = (() => {\r\n            const ifTrue = (\r\n                <div>\r\n                    <p><strong>Select Country: </strong></p>\r\n                    <Dropdown placeholder=\"Select Country\" fluid search selection\r\n                    options={ this.state.countryOptions } onChange={ this.handleCountryChange }\r\n                    defaultValue={ countrySelected } style={{ width: '25rem', }}\r\n                    />\r\n                    <br />\r\n                    <Button variant=\"primary\" onClick={ this.handleResetCountry }>Reset</Button>\r\n                </div>\r\n            );\r\n            const ifFalse = <p>OOPS! Unable to fetch the Country details.</p>\r\n            return (this.state.countryCount) ? ifTrue : ifFalse;\r\n        })();\r\n        const covidHistoryChart = (() => {\r\n            const casesChart = (<div>\r\n                <GraphChart chartTitle={\"Total Cases\"} series={this.state.covidHistory[\"totalCases\"]} labels={this.state.covidHistory[\"dateTime\"]} bgColor={\"0, 110, 255\"} />\r\n                <GraphChart chartTitle={\"Total Deaths\"} series={this.state.covidHistory[\"totalDeaths\"]} labels={this.state.covidHistory[\"dateTime\"]} bgColor={\"255, 50, 0\"} />\r\n                <GraphChart chartTitle={\"Total Active\"} series={this.state.covidHistory[\"totalActive\"]} labels={this.state.covidHistory[\"dateTime\"]} bgColor={\"0, 255, 30\"} />\r\n            </div>);\r\n            return (!this.state.covidHistoryAPI) ? waitingAPIResp : <div>{ casesChart }</div>;\r\n        })();\r\n        const getTotalStatistics = (() => {\r\n            var covidStatistics = this.state.covidStatistics;\r\n            var totalCases = 0, totalActive = 0, totalCritical = 0, totalRecovered = 0, totalDeaths = 0, totalTests = 0, totalPopulation = 0;\r\n            var totalCasesNew = 0, totalDeathsNew = 0;\r\n            for (let idx=0; covidStatistics[idx]; idx++) {\r\n                totalCases += covidStatistics[idx]['cases']['total'] ? covidStatistics[idx]['cases']['total'] : 0;\r\n                totalCasesNew += parseInt(covidStatistics[idx]['cases']['new']) ? parseInt(covidStatistics[idx]['cases']['new']) : 0;\r\n                totalActive += covidStatistics[idx]['cases']['active'] ? covidStatistics[idx]['cases']['active'] : 0;\r\n                totalCritical += covidStatistics[idx]['cases']['critical'] ? covidStatistics[idx]['cases']['critical'] : 0;\r\n                totalRecovered += covidStatistics[idx]['cases']['recovered'] ? covidStatistics[idx]['cases']['recovered'] : 0;\r\n                totalDeaths += covidStatistics[idx]['deaths']['total'] ? covidStatistics[idx]['deaths']['total'] : 0;\r\n                totalDeathsNew += parseInt(covidStatistics[idx]['deaths']['new']) ? parseInt(covidStatistics[idx]['deaths']['new']) : 0;\r\n                totalTests += covidStatistics[idx]['tests']['total'] ? covidStatistics[idx]['tests']['total'] : 0;\r\n                totalPopulation += covidStatistics[idx]['population'] ? covidStatistics[idx]['population'] : 0;\r\n            }\r\n            const totalCasesNewTag = <span className=\"new-cases-span\">( { '+ ' + commaSeparatedNum(totalCasesNew) } )</span>\r\n            const totalDeathsNewTag = <span className=\"new-cases-span\">( { '+ ' + commaSeparatedNum(totalDeathsNew) } )</span>\r\n            const totalCasesTag = <tr><td>Total Cases</td><td>{ commaSeparatedNum(totalCases) } { totalCasesNewTag }</td></tr>;\r\n            const totalActiveTag = <tr><td>Total Active</td><td>{ commaSeparatedNum(totalActive) }</td></tr>;\r\n            const totalCriticalTag = <tr><td>Total Critical</td><td>{ commaSeparatedNum(totalCritical) }</td></tr>;\r\n            const totalRecoveredTag = <tr><td>Total Recovered</td><td>{ commaSeparatedNum(totalRecovered) }</td></tr>;\r\n            const totalDeathsTag = <tr><td>Total Deaths</td><td>{ commaSeparatedNum(totalDeaths) } { totalDeathsNewTag }</td></tr>;\r\n            const totalTestsTag = <tr><td>Total Tests</td><td>{ totalTests ? commaSeparatedNum(totalTests) : \"NA\" }</td></tr>;\r\n            const totalPopulationTag = <tr><td>Total Population</td><td>{ totalPopulation ? commaSeparatedNum(totalPopulation) : \"NA\" }</td></tr>\r\n            return (<tbody className=\"font-weight-bold\">\r\n                { totalCasesTag }\r\n                { totalActiveTag }\r\n                { totalCriticalTag }\r\n                { totalRecoveredTag }\r\n                { totalDeathsTag }\r\n                { totalTestsTag }\r\n                { totalPopulationTag }\r\n            </tbody>);\r\n        })();\r\n        const covidStatistics = (\r\n            <div>\r\n                <p className=\"font-header-3\">Region: { countrySelected }</p>\r\n                <table className=\"covid-statistics-table\">\r\n                    <tbody>\r\n                    <tr style={{ textAlign: 'center', }}>\r\n                        <td>Covid Statistics</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                        <table>\r\n                            { getTotalStatistics }\r\n                        </table>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n        const countryMainContent = (() => {\r\n            const messages = <p className=\"font-header-3\">Reported Cases and Deaths by Country or Territory</p>;\r\n            const errorMessage = <div><p className=\"header-title\">[Error]</p><p>Unable to fetch the Covid Statistics Report</p></div>;\r\n            const listCovidStats = (() => {\r\n                return (!this.state.covidStatisticsAPI) ? waitingAPIResp : <div>{ covidStatistics }</div>;\r\n            })();\r\n            const listContent = (\r\n                <div className='default-app-settings'>\r\n                    <table className='country-graph-table'>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td style={{ textAlign: 'left', }}> { messages } { selectCountry } <br /> { listCovidStats } </td>\r\n                                <td style={{ float: 'right', }}> { covidHistoryChart } </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <br />\r\n                </div>\r\n            );\r\n            return this.state.error ? errorMessage : (!this.state.apiResponse) ? waitingAPIResp  : listContent;\r\n        })();\r\n        return <div>{ countryMainContent }</div>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"header-title\">\r\n                <Link to=\"/covid19-statistics\">\r\n                    <img src={ process.env.PUBLIC_URL + \"/static/img/Covid19.png\" }\r\n                    alt=\"#NA\" width={50}></img>\r\n                    &nbsp;Covid'19 Statistics\r\n                </Link>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <span style={{ textAlign: 'left', }}>\r\n                    Developed using:&emsp;\r\n                    <a href=\"https://reactjs.org/\"\r\n                    target=\"_blank\" rel=\"noreferrer\">\r\n                        <i className=\"fab fa-react\"></i>\r\n                    </a>\r\n                    &emsp;\r\n                    <a href=\"https://mongodb.com/\"\r\n                    target=\"_blank\" rel=\"noreferrer\">\r\n                        <i className=\"fas fa-database\"></i>\r\n                    </a>\r\n                    &emsp;\r\n                    <a href=\"https://github.com/sathish2krishnan/covid19-statistics\"\r\n                    target=\"_blank\" rel=\"noreferrer\">\r\n                        <i className=\"fab fa-github\"></i>\r\n                    </a>\r\n                    &emsp;\r\n                    <a href=\"https://krish-flask-app-v1.herokuapp.com/api/v1/Sathish\"\r\n                    target=\"_blank\" rel=\"noreferrer\">\r\n                        <i className=\"fas fa-server\"></i>\r\n                    </a>\r\n                    &emsp;\r\n                    <a href=\"https://api-sports.io/documentation/covid-19/v1\"\r\n                    target=\"_blank\" rel=\"noreferrer\">\r\n                        <i className=\"fas fa-table\"></i>\r\n                    </a>\r\n                </span>\r\n                <span style={{ float: 'right', }}>\r\n                    Developed by:&emsp;\r\n                    <a href=\"https://www.linkedin.com/in/sathish-krishnan-venkatachalam-b9a002137/\"\r\n                    target=\"_blank\" rel=\"noreferrer\">\r\n                        <i className=\"fab fa-linkedin\"></i>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport './styles/App.css';\nimport CovidStatistics from './components/covidStatistics';\nimport Header from './components/header';\nimport Footer from './components/footer';\n\nfunction App() {\n  return (\n    <div className=\"content\">\n      <Router>\n        <Header />\n            <Switch>\n                <Route exact path=\"/covid19-statistics\"> <CovidStatistics /> </Route>\n            </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}