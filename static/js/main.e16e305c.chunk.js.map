{"version":3,"sources":["components/covidHistoryChart.jsx","appConfig.tsx","components/covidStatistics.jsx","components/header.tsx","components/footer.tsx","App.tsx","index.tsx"],"names":["GraphChart","props","state","series","name","data","covidHistory","options","chart","height","type","dataLabels","enabled","stroke","curve","xaxis","categories","tooltip","x","format","this","style","width","Component","config","webServer","host","covidAPI","countries","statistics","history","img","loadingGIF","commaSeparatedNum","toString","replace","covidStatistics","handleResetCountry","event","a","countrySelected","setState","apiResponse","covidStatisticsAPI","covidHistoryAPI","componentDidMount","handleCountryChange","eventHandled","target","value","covidStatisticsArgs","url","country","fetch","encodeURIComponent","JSON","stringify","json","getCovidStatistics","response","covidHistoryArgs","params","getCovidHistory","console","log","error","countryCount","countryList","countryOptions","args","globalValue","push","String","toLowerCase","text","index","result","totalCases","totalDeaths","totalActive","dateTime","dateArray","curr_date","Date","setDate","getDate","i","length","date_inst","indexOf","toLocaleDateString","split","countryQueryArgs","countryData","getCountryOptions","alert","waitingAPIResp","className","src","alt","selectCountry","ifTrue","Dropdown","placeholder","fluid","search","selection","onChange","defaultValue","Button","variant","onClick","ifFalse","covidHistoryChart","getTotalStatistics","totalCritical","totalRecovered","totalTests","totalCasesNew","totalDeathsNew","idx","parseInt","totalCasesNewTag","totalDeathsNewTag","totalCasesTag","totalActiveTag","totalCriticalTag","totalRecoveredTag","totalDeathsTag","totalTestsTag","textAlign","getTotalPopulation","totalPopulation","populationTable","map","countryMainContent","messages","errorMessage","listCovidStats","listPopulationTable","listContent","float","Header","to","process","Footer","href","rel","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e16e305c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\nexport default class GraphChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            series: [\r\n                { name: 'Total Cases', data: [...this.props.covidHistory['totalCases']], },\r\n                { name: 'Total Deaths', data: [...this.props.covidHistory['totalDeaths']], },\r\n                { name: 'Total Active', data: [...this.props.covidHistory['totalActive']], },\r\n            ],\r\n            options: {\r\n                chart: { height: 350, type: 'area', },\r\n                dataLabels: { enabled: false, },\r\n                stroke: { curve: 'smooth' },\r\n                xaxis: { type: 'datetime', categories: [...this.props.covidHistory['dateTime']], },\r\n                tooltip: { x: { format: 'yyyy-MM-dd' } },\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={250} style={{ width: '40rem', }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","const config = {\r\n    webServer: {\r\n        host: 'https://krish-flask-app-v1.herokuapp.com/api/v1/covid_api'\r\n    },\r\n    covidAPI: {\r\n        countries: 'https://covid-193.p.rapidapi.com/countries',\r\n        statistics: 'https://covid-193.p.rapidapi.com/statistics',\r\n        history: 'https://covid-193.p.rapidapi.com/history',\r\n    },\r\n    img: {\r\n        loadingGIF: 'https://media.giphy.com/media/hWZBZjMMuMl7sWe0x8/giphy.gif'\r\n    }\r\n}\r\n\r\nexport default config;\r\n","import React, { Component } from 'react';\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport GraphChart from './covidHistoryChart';\r\nimport config from '../appConfig';\r\n\r\nfunction commaSeparatedNum(data) {\r\n    return data ? data.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\") : 0;\r\n}\r\n\r\nexport default class covidStatistics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apiResponse: '',\r\n            countryCount: '',\r\n            countryList: [],\r\n            countryOptions: [],\r\n            countrySelected: '',\r\n            covidStatisticsAPI: '',\r\n            covidStatistics: [],\r\n            covidHistoryAPI: '',\r\n            covidHistory: {},\r\n            error: '',\r\n        };\r\n    }\r\n    getCountryOptions (args) {\r\n        var countryOptions = [];\r\n        var globalValue = 'All';\r\n        countryOptions.push({\r\n            value: globalValue,\r\n            name: String(globalValue).toLowerCase(),\r\n            text: globalValue,\r\n        });\r\n        for (let index = 0; args['countries'][index]; index++) {\r\n            countryOptions.push({\r\n                value: args['countries'][index],\r\n                name: String(args['countries'][index]).toLowerCase(),\r\n                text: args['countries'][index],\r\n            });\r\n        }\r\n        return countryOptions;\r\n    }\r\n    getCovidStatistics(args) {\r\n        var result = [];\r\n        for (let index = 0; args['countries'][index]; index++) {\r\n            if (args['countries'][index]['continent'] !== args['countries'][index]['country'])\r\n                result.push(args['countries'][index]);\r\n        }\r\n        return result;\r\n    }\r\n    getCovidHistory(args) {\r\n        var result = {\r\n            totalCases: [],\r\n            totalDeaths: [],\r\n            totalActive: [],\r\n            dateTime: []\r\n        };\r\n        var dateArray = [];\r\n        let curr_date = new Date();\r\n        curr_date.setDate(curr_date.getDate() - 179);\r\n        for (let i=0; i < args['data'].length; i++) {\r\n            let date_inst = new Date(args['data'][i]['time']);\r\n            if (( date_inst > curr_date ) && ( dateArray.indexOf(date_inst.toLocaleDateString().split(\",\")[0]) === -1 )) {\r\n                dateArray.push(date_inst.toLocaleDateString().split(\",\")[0]);\r\n                result['totalCases'].push(args['data'][i]['cases']['total']);\r\n                result['totalDeaths'].push(args['data'][i]['deaths']['total']);\r\n                result['totalActive'].push(args['data'][i]['cases']['active']);\r\n                result['dateTime'].push(date_inst.toLocaleDateString().split(\",\")[0]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    async componentDidMount() {\r\n        try {\r\n            var countryQueryArgs = { url: config.covidAPI.countries, }\r\n            let countryData = await fetch(`${config.webServer.host}?query=${encodeURIComponent(JSON.stringify(countryQueryArgs))}`);\r\n            countryData = await countryData.json();\r\n            let covidStatisticsArgs = { url: config.covidAPI.statistics, }\r\n            let covidStatistics = await fetch(`${config.webServer.host}?query=${encodeURIComponent(JSON.stringify(covidStatisticsArgs))}`);\r\n            covidStatistics = await covidStatistics.json();\r\n            this.setState({\r\n                apiResponse: countryData,\r\n                countryCount: countryData.response.length,\r\n                countryList: [...['All'], ...countryData.response],\r\n                countryOptions: this.getCountryOptions({ countries: [...countryData.response] }),\r\n                countrySelected: 'All',\r\n                covidStatisticsAPI: covidStatistics,\r\n                covidStatistics: this.getCovidStatistics({ countries: [...covidStatistics.response] }),\r\n            });\r\n            let covidHistoryArgs = { url: config.covidAPI.history, params: {country: 'All'} }\r\n            let covidHistoryAPI = await fetch(`${config.webServer.host}?query=${encodeURIComponent(JSON.stringify(covidHistoryArgs))}`);\r\n            covidHistoryAPI = await covidHistoryAPI.json();\r\n            let getCovidHistory = this.getCovidHistory({ data: [...covidHistoryAPI.response] });\r\n            this.setState({\r\n                covidHistoryAPI: covidHistoryAPI,\r\n                covidHistory: getCovidHistory,\r\n            });\r\n        } catch (err) {\r\n            this.setState({\r\n                error: JSON.stringify(err),\r\n                apiResponse: '',\r\n                covidStatisticsAPI: '',\r\n                covidHistoryAPI: '',\r\n            });\r\n            alert(err);\r\n        }\r\n    }\r\n    handleResetCountry = async (event, data) => {\r\n        if (this.state.countrySelected !== 'All') {\r\n            this.setState({ apiResponse: '', covidStatisticsAPI: '', covidHistoryAPI: '', });\r\n            this.componentDidMount();\r\n        }\r\n    };\r\n    handleCountryChange = async (event, data) => {\r\n        var eventHandled = {\r\n            event: event.target.value,\r\n            data: data.value,\r\n        }\r\n        let covidStatisticsArgs = { url: config.covidAPI.statistics, };\r\n        if (data.value !== 'All') {\r\n            covidStatisticsArgs['params'] = { country: data.value, };\r\n        }\r\n        try {\r\n            this.setState({ covidStatisticsAPI: '', covidHistoryAPI: '', });\r\n            let covidStatistics = await fetch(`${config.webServer.host}?query=${encodeURIComponent(JSON.stringify(covidStatisticsArgs))}`);\r\n            covidStatistics = await covidStatistics.json();\r\n            this.setState({\r\n                countrySelected: eventHandled['data'],\r\n                covidStatisticsAPI: covidStatistics,\r\n                covidStatistics: this.getCovidStatistics({ countries: covidStatistics.response }),\r\n            });\r\n            let covidHistoryArgs = {\r\n                url: config.covidAPI.history,\r\n                params: { country: data.value, }\r\n            }\r\n            let covidHistoryAPI = await fetch(`${config.webServer.host}?query=${encodeURIComponent(JSON.stringify(covidHistoryArgs))}`);\r\n            covidHistoryAPI = await covidHistoryAPI.json();\r\n            let getCovidHistory = this.getCovidHistory({ data: [...covidHistoryAPI.response] });\r\n            this.setState({\r\n                covidHistoryAPI: covidHistoryAPI,\r\n                covidHistory: getCovidHistory,\r\n            });\r\n            console.log(this.state.covidHistory);\r\n        } catch (err) {\r\n            this.setState({\r\n                error: JSON.stringify(err),\r\n                apiResponse: '',\r\n                covidStatisticsAPI: '',\r\n                covidHistoryAPI: '',\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const countrySelected = this.state.countrySelected;\r\n        const loadingGIF = config.img.loadingGIF;\r\n        const waitingAPIResp = <img className=\"loading-gif-style\" src={ loadingGIF } alt=\"#NA\"></img>;\r\n        const selectCountry = (() => {\r\n            const ifTrue = (\r\n                <div>\r\n                    <p><strong>Select Country: </strong></p>\r\n                    <Dropdown placeholder=\"Select Country\" fluid search selection\r\n                    options={ this.state.countryOptions } onChange={ this.handleCountryChange }\r\n                    defaultValue={ countrySelected } style={{ width: '25rem', }}\r\n                    />\r\n                    <br />\r\n                    <Button variant=\"primary\" onClick={ this.handleResetCountry }>Reset</Button>\r\n                </div>\r\n            );\r\n            const ifFalse = <p>OOPS! Unable to fetch the Country details.</p>\r\n            return (this.state.countryCount) ? ifTrue : ifFalse;\r\n        })();\r\n        const covidHistoryChart = (() => {\r\n            return (!this.state.covidHistoryAPI) ? waitingAPIResp : (<GraphChart covidHistory={this.state.covidHistory} />);\r\n        })();\r\n        const getTotalStatistics = (() => {\r\n            var covidStatistics = this.state.covidStatistics;\r\n            var totalCases = 0, totalActive = 0, totalCritical = 0, totalRecovered = 0, totalDeaths = 0, totalTests = 0;\r\n            var totalCasesNew = 0, totalDeathsNew = 0;\r\n            for (let idx=0; covidStatistics[idx]; idx++) {\r\n                totalCases += covidStatistics[idx]['cases']['total'] ? covidStatistics[idx]['cases']['total'] : 0;\r\n                totalCasesNew += parseInt(covidStatistics[idx]['cases']['new']) ? parseInt(covidStatistics[idx]['cases']['new']) : 0;\r\n                totalActive += covidStatistics[idx]['cases']['active'] ? covidStatistics[idx]['cases']['active'] : 0;\r\n                totalCritical += covidStatistics[idx]['cases']['critical'] ? covidStatistics[idx]['cases']['critical'] : 0;\r\n                totalRecovered += covidStatistics[idx]['cases']['recovered'] ? covidStatistics[idx]['cases']['recovered'] : 0;\r\n                totalDeaths += covidStatistics[idx]['deaths']['total'] ? covidStatistics[idx]['deaths']['total'] : 0;\r\n                totalDeathsNew += parseInt(covidStatistics[idx]['deaths']['new']) ? parseInt(covidStatistics[idx]['deaths']['new']) : 0;\r\n                totalTests += covidStatistics[idx]['tests']['total'] ? covidStatistics[idx]['tests']['total'] : 0;\r\n            }\r\n            const totalCasesNewTag = <span className=\"new-cases-span\">( { '+ ' + commaSeparatedNum(totalCasesNew) } )</span>\r\n            const totalDeathsNewTag = <span className=\"new-cases-span\">( { '+ ' + commaSeparatedNum(totalDeathsNew) } )</span>\r\n            const totalCasesTag = <tr><td>Total Cases</td><td>{ commaSeparatedNum(totalCases) } { totalCasesNewTag }</td></tr>;\r\n            const totalActiveTag = <tr><td>Total Active</td><td>{ commaSeparatedNum(totalActive) }</td></tr>;\r\n            const totalCriticalTag = <tr><td>Total Critical</td><td>{ commaSeparatedNum(totalCritical) }</td></tr>;\r\n            const totalRecoveredTag = <tr><td>Total Recovered</td><td>{ commaSeparatedNum(totalRecovered) }</td></tr>;\r\n            const totalDeathsTag = <tr><td>Total Deaths</td><td>{ commaSeparatedNum(totalDeaths) } { totalDeathsNewTag }</td></tr>;\r\n            const totalTestsTag = <tr><td>Total Tests</td><td>{ commaSeparatedNum(totalTests) }</td></tr>;\r\n            return (<tbody className=\"font-weight-bold\">\r\n                { totalCasesTag }\r\n                { totalActiveTag }\r\n                { totalCriticalTag }\r\n                { totalRecoveredTag }\r\n                { totalDeathsTag }\r\n                { totalTestsTag }\r\n            </tbody>);\r\n        })();\r\n        const covidStatistics = (\r\n            <div>\r\n                <p className=\"font-header-3\">Region: { countrySelected }</p>\r\n                <table className=\"covid-statistics-table\">\r\n                    <tbody>\r\n                    <tr style={{ textAlign: 'center', }}>\r\n                        <td>Covid Statistics</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                        <table>\r\n                            { getTotalStatistics }\r\n                        </table>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n        const getTotalPopulation = (() => {\r\n            var covidStatistics = this.state.covidStatistics;\r\n            var totalPopulation = 0;\r\n            for (let idx=0; covidStatistics[idx]; idx++) {\r\n                totalPopulation += covidStatistics[idx]['population']\r\n            }\r\n            return totalPopulation\r\n        })();\r\n        const populationTable = (\r\n            <div>\r\n                <p className=\"font-header-4\">Total Population</p>\r\n                <div className=\"scrollable-population-table\">\r\n                    <table className=\"total-population-table\">\r\n                        <thead className=\"font-weight-bold\">\r\n                            <tr>\r\n                                <th>Continent</th>\r\n                                <th>Country</th>\r\n                                <th>Population</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { (() => {\r\n                                if (countrySelected === 'All') {\r\n                                    return (\r\n                                        <tr key='All'>\r\n                                            <td>All</td>\r\n                                            <td>All</td>\r\n                                            <td>{ getTotalPopulation ? commaSeparatedNum(getTotalPopulation) : null }</td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                            })() }\r\n                            { this.state.covidStatistics.map((data) => (\r\n                                <tr key={ data['country'] }>\r\n                                    <td>{ data['continent'] }</td>\r\n                                    <td>{ data['country'] }</td>\r\n                                    <td>{ data['population'] ? commaSeparatedNum(data['population']) : null }</td>\r\n                                </tr>\r\n                            )) }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n        const countryMainContent = (() => {\r\n            const messages = <p className=\"font-header-3\">Reported Cases and Deaths by Country or Territory</p>;\r\n            const errorMessage = <div><p className=\"header-title\">[Error]</p><p>Unable to fetch the Covid Statistics Report</p></div>;\r\n            const listCovidStats = (() => {\r\n                return (!this.state.covidStatisticsAPI) ? waitingAPIResp : <div>{ covidStatistics }</div>;\r\n            })();\r\n            const listPopulationTable = (() => {\r\n                return (!this.state.covidStatisticsAPI) ? waitingAPIResp : <div>{ populationTable }</div>;\r\n            })();\r\n            const listContent = (\r\n                <div className='default-app-settings'>\r\n                    <table className='country-graph-table'>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td style={{ textAlign: 'left', }}> { messages } { selectCountry } <br /> { listCovidStats } </td>\r\n                                <td style={{ float: 'right', }}> { covidHistoryChart } <br /> { listPopulationTable } </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <br />\r\n                </div>\r\n            );\r\n            return this.state.error ? errorMessage : (!this.state.apiResponse) ? waitingAPIResp  : listContent;\r\n        })();\r\n        return <div>{ countryMainContent }</div>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"header-title\">\r\n                <Link to=\"/covid19-statistics\">\r\n                    <img src={ process.env.PUBLIC_URL + \"/static/img/Covid19.png\" }\r\n                    alt=\"#NA\" width={50}></img>\r\n                    &nbsp;Covid'19 Statistics\r\n                </Link>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <span style={{ textAlign: 'left', }}>\r\n                    Developed using:&emsp;\r\n                    <a href=\"https://reactjs.org/\"\r\n                    target=\"_blank\" rel=\"noreferrer\">\r\n                        <i className=\"fab fa-react\"></i>\r\n                    </a>\r\n                    &emsp;\r\n                    <a href=\"https://api-sports.io/documentation/covid-19/v1\"\r\n                    target=\"_blank\" rel=\"noreferrer\">\r\n                        <i className=\"fas fa-database\"></i>\r\n                    </a>\r\n                </span>\r\n                <span style={{ float: 'right', }}>\r\n                    Developed by:&emsp;\r\n                    <a href=\"https://www.linkedin.com/in/sathish-krishnan-venkatachalam-b9a002137/\"\r\n                    target=\"_blank\" rel=\"noreferrer\">\r\n                        <i className=\"fab fa-linkedin\"></i>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport './styles/App.css';\nimport CovidStatistics from './components/covidStatistics';\nimport Header from './components/header';\nimport Footer from './components/footer';\n\nfunction App() {\n  return (\n    <div className=\"content\">\n      <Router>\n        <Header />\n            <Switch>\n                <Route exact path=\"/covid19-statistics\"> <CovidStatistics /> </Route>\n            </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}